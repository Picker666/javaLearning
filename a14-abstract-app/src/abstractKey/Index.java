package abstractKey;

/**
 * 抽象类
 *      abstract关键字，可以修饰类和成员方法
 *      abstract修饰类，这个类就是抽象类，修饰方法就是抽象方法。
 *
 * 注意事项
 *      抽象方法只有方法签名，不能声明方法体；
 *      一个类中如果定义了抽象方法，这个类必须声明称抽象类，否则，报错。
 *
 * 使用场景：
 *      抽象类理解成不完整的设计图，一般作为父类，让子类继承；
 *      当父类知道子类一定完成某种行为，但是每个子类的行为是想又不同，于是该父类就把该行为定义为抽象方法的形式，具体是实现交给子类去完成，此时这个类就可以声明称抽象类
 *
 * 特征：
 *      1、类有东西，抽象类也有
 *      2、抽象类可以没有抽象方法，但是有抽象方法的类一定是抽象类
 *      3、一个类继承了抽象类，必须重写完抽象类的全部抽象方法，否则，这个类也必须定义为抽象类
 *      4、不能使用abstract修饰变量、代码块、构造器
 *      5、抽象类不能被实例话，因为抽象类中的方法没有方法体
 *
 * final和abstract是互斥关系
 *
 * */
public class Index {

}
